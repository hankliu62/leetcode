/**
 * 罗马数字转整数 https://leetcode-cn.com/problems/roman-to-integer/ [简单]
 *
 * 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。
 *  字符          数值
 *  I             1
 *  V             5
 *  X             10
 *  L             50
 *  C             100
 *  D             500
 *  M             1000
 * 例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。
 *
 * 通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：
 *
 *  I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。
 *  X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。
 *  C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。
 * 给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。
 *
 * 示例 1:
 *  输入: "III"
 *  输出: 3
 *
 * 示例 2:
 *  输入: "IV"
 *  输出: 4
 *
 * 示例 3:
 *  输入: "IX"
 *  输出: 9
 *
 * 示例 4:
 *  输入: "LVIII"
 *  输出: 58
 *  解释: L = 50, V= 5, III = 3.
 *
 * 示例 5:
 *  输入: "MCMXCIV"
 *  输出: 1994
 *  解释: M = 1000, CM = 900, XC = 90, IV = 4.
 */

/**
 * 将罗马数字转换为整数。
 * @param s 罗马数字字符串。
 * @returns 整数表示的数值。
 */
function romanToInt(s: string): number {
  // 罗马数字和对应整数的映射表
  const map: Record<string, number> = {
    I: 1,
    V: 5,
    IV: 4,
    IX: 9,
    X: 10,
    XL: 40,
    XC: 90,
    L: 50,
    C: 100,
    CD: 400,
    CM: 900,
    D: 500,
    M: 1000,
  }

  let result = 0; // 初始化结果为0
  for (let i = 0, len = s.length; i < len; i ++) {
    // 如果当前两个字符是映射表中的组合，则累加对应的整数值，并将索引向前移动一位
    if (map[s.slice(i, i + 2)]) {
      result += map[s.slice(i, i + 2)];
      i ++;
    } else {
      // 如果当前字符是单个罗马数字，则直接累加对应的整数值
      result += map[s[i]];
    }
  }

  return result; // 返回转换后的整数
};
